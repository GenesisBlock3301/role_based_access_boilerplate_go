basePath: /api/v1
definitions:
  serializers.LoginSerializer:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  serializers.RegisterSerializer:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  serializers.VerifyOTPSerializer:
    properties:
      code:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get authenticated user.
      tags:
      - User
  /create:
    post:
      consumes:
      - application/json
      description: User Registration
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/serializers.RegisterSerializer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
      summary: Register User.
      tags:
      - User
  /email-verify/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Email to be verified
        format: email
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Verify email controller.
      tags:
      - User
  /generate-otp/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Generate OTP
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/serializers.LoginSerializer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Generate OTP.
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/serializers.LoginSerializer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
      summary: Login user.
      tags:
      - User
  /verify-otp/:
    get:
      consumes:
      - application/json
      parameters:
      - description: OTP info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/serializers.VerifyOTPSerializer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Verify OTP.
      tags:
      - User
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
